Introduction

After introducing the Raspberry Pi to a local school and discussing it with them, the teachers decided that they wanted to use Scratch as a programming tool.  The motivation for this was that some of the pupils have no experience of programming.  The teachers in question teach engineering and were very interested using components via the GPIO connections.  There are currently two Scratch GPIO packages, where one of them has already been introduced in Issue ?? of the MagPi.  After looking at these libraries, there did not appear to be a clean way of extending them to more general applications.  Therefore, work started on a new package called ScratchRpiIO.

Aims

The objectives for the ScratchRpiIO package are to make the Scratch interface fast and intuitive, the Python backend should be easy to extend to cover new devices, and lastly the code needs to be packaged.

I/O operations

All devices can be thought of having input or output channels.  For example, an H-bridge motor controller with two channels has two output channels.  A connection to a text file has one output.  An ADC might have as many as eight inputs, while using one channel on the SPI bus.  All of these I/O operations need to be easily available in Scratch, to allow students to interact with the environment and record some of the data.

Design

Python and Scratch interact with each other via a network connection.  This means that the Python and Scratch programs could be running on the same Raspberry Pi or two different Raspberry Pis.  Thankfully, a thin layer Python client that can interact with the Scratch server exists and is called scratchpy 
https://github.com/pilliq/scratchpy/blob/master/README.md

  
